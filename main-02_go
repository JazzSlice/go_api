package main

import (
    "context"
    "fmt"
    "os"
    "net/http"

    "github.com/jackc/pgx/v5"
    "github.com/blockloop/scan/v2"
    "github.com/gin-gonic/gin"
)

//type album struct {
//    ID        int64
//    Title     string
//    Artist    string
//    Price     float32
//}

func allAlbumsQuery() {
    rows, err = conn.QueryRow(context.Background(), "SELECT * FROM album")

    var albums []Album
    err := scan.Rows(&albums, rows)

    if err != nil {
        fmt.Fprintf(os.Stderr, "QueryRow failed: %v\n", err)
        os.Exit(1)
    }

    return albums
}

func getAlbums(c *gin.Context) {
    c.IndentedJSON(http.StatusOK, allAlbumsQuery)
}

func main() {
    urlExample := "postgres://worker:example@localhost:5432/recordings"
    conn, err := pgx.Connect(context.Background(), urlExample) //os.Getenv("DATABASE_URL"))
    if err != nil {
        fmt.Fprintf(os.Stderr, "Unable to connect to database: %v\n", err)
        os.Exit(1)
    }
    defer conn.Close(context.Background())

    router := gin.Default()
    router.GET("/albums", getAlbums)

    router.Run("localhost:8080")
}

